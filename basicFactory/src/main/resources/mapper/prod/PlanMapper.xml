<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mes.bf.prod.mapper.PlanMapper">
	<resultMap type="planHdVO" id="planHdMap">
		<id property="planHdCode" column="plan_hd_code" />
		<result property="planHdCode" column="plan_hd_code" />
		<result property="planHdName" column="plan_hd_name" />
		<result property="slsOrdHdNo" column="sls_ord_hd_no" />
		<result property="empId" column="emp_id" />
		<result property="planHdDate" column="plan_hd_date" />
		<result property="planHdRemk" column="plan_hd_remk" />
	</resultMap>

	<resultMap type="planVO" id="planMap">
		<id property="planIdx" column="plan_idx" />
		<result property="planIdx" column="plan_idx" />
		<result property="finPrdCdCode" column="fin_prd_cd_code" />
		<result property="finPrdCdName" column="fin_prd_cd_name" />
		<result property="planProdVol" column="plan_prod_vol" />
		<result property="planSdate" column="plan_sdate" />
		<result property="planEdate" column="plan_edate" />
		<result property="planRemk" column="plan_remk" />
		<result property="instProdIndicaVol"
			column="inst_prod_indica_vol" />
		<result property="planPreVol"
			column="plan_pre_vol" />
	</resultMap>

	<resultMap type="colOrdVO" id="colOrdMap">
		<id property="slsOrdHdNo" column="sls_ord_hd_no" />
		<result property="slsOrdHdNo" column="sls_ord_hd_no" />
		<result property="slsOrdHdDate" column="sls_ord_hd_date" />
		<result property="vendCdCode" column="vend_cd_code" />
		<result property="vendCdNm" column="vend_cd_nm" />
		<result property="finPrdCdCode" column="fin_prd_cd_code" />
		<result property="finPrdCdName" column="fin_prd_cd_name" />
		<result property="slsOrdDtlDlvDate"
			column="sls_ord_dtl_dlv_date" />
		<result property="slsOrdDtlVol" column="sls_ord_dtl_vol" />
		<result property="slsOrdDtlPrgCls" column="sls_ord_dtl_prg_cls" />
	</resultMap>

	<resultMap type="colPlan" id="colPlanMap">
		<collection property="planHdVO" resultMap="planHdMap" />
		<collection property="planVO" resultMap="planMap" />
	</resultMap>

	<resultMap type="colPlanOrd" id="colPlanOrdMap">
		<collection property="planHdVO" resultMap="planHdMap" />
		<collection property="planVO" resultMap="planMap" />
		<collection property="colOrdVO" resultMap="colOrdMap" />
	</resultMap>
	
	<!-- 생산계획일자 조건거는 sql -->
	<sql id="ifPlanDate">
		<choose>
			<when
				test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">
				AND PH.plan_hd_date BETWEEN TO_CHAR(#{startDate}, 'YY/MM/DD') AND TO_CHAR(#{endDate}, 'YY/MM/DD') + 0.9999
			</when>
			<when test="startDate != null and startDate != ''">
				AND PH.plan_hd_date = #{startDate}
			</when>
			<when test="endDate != null and endDate != ''">
				AND PH.plan_hd_date = #{endDate}
			</when>
		</choose>
	</sql>
	
	
	
	<!-- 지시에 존재하지 않거나 지시량이 계획량에 못 미치는 생산계획헤더 조회 -->
	<select id="findPlanInst" resultType="planHdVO"
		parameterType="String">
		SELECT DISTINCT PH.PLAN_HD_CODE, PH.PLAN_HD_NAME, PH.EMP_ID, PH.PLAN_HD_DATE, NVL(PH.PLAN_HD_REMK,' ') AS PLAN_HD_REMK
		FROM BF_PROD_PLAN_HD PH
		   JOIN BF_PROD_PLAN P
		     ON P.PLAN_HD_CODE = PH.PLAN_HD_CODE
		   LEFT OUTER JOIN (SELECT I.PLAN_HD_CODE, ID.FIN_PRD_CD_CODE, SUM(ID.INST_PROD_INDICA_VOL) AS INST_PROD_INDICA_VOL
			                FROM BF_PROD_INSTRUCTION I
			                    JOIN BF_PROD_INST_DETAIL ID
			                     ON I.INST_NO = ID.INST_NO
			                WHERE PLAN_HD_CODE IS NOT NULL
			                GROUP BY I.PLAN_HD_CODE, ID.FIN_PRD_CD_CODE) I
		     ON I.PLAN_HD_CODE = PH.PLAN_HD_CODE
		        AND P.FIN_PRD_CD_CODE = I.FIN_PRD_CD_CODE
		WHERE ((P.PLAN_PROD_VOL > I.INST_PROD_INDICA_VOL
		       AND I.INST_PROD_INDICA_VOL IS NOT NULL)
		   OR I.INST_PROD_INDICA_VOL IS NULL)
		<include refid="ifPlanDate" />
		<if test="empId != null and empId != ''">
			AND emp_id = #{empId}
		</if>
		ORDER BY PH.PLAN_HD_CODE DESC
	</select>
	
	<!-- 지시에 존재하지 않거나 지시량이 계획량에 못 미치는 생산계획 detail 조회  -->
	<select id="findPlan" resultType="planVO">
		SELECT P.PLAN_IDX, P.PLAN_HD_CODE, P.FIN_PRD_CD_CODE, F.FIN_PRD_CD_NAME, P.PLAN_SDATE, P.PLAN_EDATE, P.PLAN_PROD_VOL, NVL(I.INST_PROD_INDICA_VOL,0) AS INST_PROD_INDICA_VOL
		FROM BF_PROD_PLAN P
		LEFT OUTER JOIN (SELECT I.FIN_PRD_CD_CODE, IH.PLAN_HD_CODE, SUM(I.INST_PROD_INDICA_VOL) AS INST_PROD_INDICA_VOL
		                        FROM BF_PROD_INSTRUCTION IH
		                        JOIN BF_PROD_INST_DETAIL I
		                        ON IH.INST_NO = I.INST_NO
		                        WHERE IH.PLAN_HD_CODE IS NOT NULL
		                        GROUP BY IH.PLAN_HD_CODE, I.FIN_PRD_CD_CODE) I
		    ON P.PLAN_HD_CODE = I.PLAN_HD_CODE
		       AND P.FIN_PRD_CD_CODE = I.FIN_PRD_CD_CODE
		JOIN BF_CMN_FINISH_PRODUCT_CODE F
		    ON F.FIN_PRD_CD_CODE = P.FIN_PRD_CD_CODE
		WHERE (P.PLAN_PROD_VOL > I.INST_PROD_INDICA_VOL
		       OR I.INST_PROD_INDICA_VOL IS NULL)
		  AND P.PLAN_HD_CODE = #{planHdCode}
		ORDER BY PLAN_IDX
	</select>
	
	
	<!-- 검색조건 SQL -->
	<sql id="criteria">
		<if test="keyword != null and keyword != ''">
			<![CDATA[ and plan_hd_date >=  #{keyword} ]]>
		</if>
		<if test="keyword2 != null and keyword2 != ''">
			<![CDATA[ and plan_hd_date <= TO_CHAR(#{keyword2}, 'YY/MM/DD') + 0.9999 ]]>
		</if>
		<if test="keyword3 != null and keyword3 != ''">
			<![CDATA[ and oh.VEND_CD_CODE = #{keyword3} ]]>
		</if>
	</sql>
	
	<select id="findPlanOrdCount" resultType="int">
		SELECT COUNT(*)
			FROM BF_PROD_PLAN P
			JOIN BF_PROD_PLAN_HD PH
			  ON P.PLAN_HD_CODE = PH.PLAN_HD_CODE
			JOIN BF_CMN_FINISH_PRODUCT_CODE F
			  ON P.FIN_PRD_CD_CODE = F.FIN_PRD_CD_CODE
			LEFT OUTER JOIN BF_SALES_ORD_HD OH
			  ON OH.SLS_ORD_HD_NO = PH.SLS_ORD_HD_NO
			LEFT OUTER JOIN BF_CMN_VENDOR_CODE V
			  ON OH.VEND_CD_CODE = V.VEND_CD_CODE
			LEFT OUTER JOIN BF_SALES_ORD_DTL O
			  ON O.SLS_ORD_HD_NO = OH.SLS_ORD_HD_NO
			     AND P.FIN_PRD_CD_CODE = O.FIN_PRD_CD_CODE
			<where>
				<include refid="criteria" />
			</where>
	</select>
	
	<!-- 생산계획 조회시, 주문내역을 참고한 생산계획과 참고하지 않은 생산계획을 조회 -->
	<select id="findPlanOrd" resultMap="colPlanOrdMap">
		SELECT X.* FROM(
			SELECT Y.*, ROWNUM AS RNUM FROM (SELECT P.PLAN_IDX, PH.PLAN_HD_CODE, PH.PLAN_HD_NAME, PH.PLAN_HD_DATE, PH.EMP_ID,
						       P.FIN_PRD_CD_CODE, F.FIN_PRD_CD_NAME, P.PLAN_PROD_VOL, 
						       P.PLAN_SDATE, P.PLAN_EDATE, NVL(P.PLAN_REMK,' ') AS PLAN_REMK,
						       P.PLAN_PRE_VOL,
						       OH.SLS_ORD_HD_NO, OH.VEND_CD_CODE,
						       V.VEND_CD_NM, O.SLS_ORD_DTL_VOL,
						       O.SLS_ORD_DTL_DLV_DATE
						FROM BF_PROD_PLAN P
						JOIN BF_PROD_PLAN_HD PH
						  ON P.PLAN_HD_CODE = PH.PLAN_HD_CODE
						JOIN BF_CMN_FINISH_PRODUCT_CODE F
						  ON P.FIN_PRD_CD_CODE = F.FIN_PRD_CD_CODE
						LEFT OUTER JOIN BF_SALES_ORD_HD OH
						  ON OH.SLS_ORD_HD_NO = PH.SLS_ORD_HD_NO
						LEFT OUTER JOIN BF_CMN_VENDOR_CODE V
						  ON OH.VEND_CD_CODE = V.VEND_CD_CODE
						LEFT OUTER JOIN BF_SALES_ORD_DTL O
						  ON O.SLS_ORD_HD_NO = OH.SLS_ORD_HD_NO
						     AND P.FIN_PRD_CD_CODE = O.FIN_PRD_CD_CODE
						<where>
							<include refid="criteria" />
						</where>
						ORDER BY p.plan_idx DESC ) Y
				<where>
					<![CDATA[ AND ROWNUM <= #{pageNum}*#{amount}   ]]>
				</where>
			) X
		WHERE X.RNUM > (#{pageNum}-1)*#{amount}
				
	</select>
	
	
	<select id="findInInstPlan" resultType="String">
		SELECT P.PLAN_IDX
		FROM BF_PROD_PLAN P
		JOIN BF_PROD_INSTRUCTION I
		ON I.PLAN_HD_CODE = P.PLAN_HD_CODE
		JOIN BF_PROD_INST_DETAIL ID
		ON I.INST_NO = ID.INST_NO
		   AND ID.FIN_PRD_CD_CODE = P.FIN_PRD_CD_CODE
		WHERE P.PLAN_HD_CODE = #{planHdCode}
	</select>
	
	
	<!-- 지시에 들어가지 않은  -->
	<select id="findMyPlan" resultMap="colPlanOrdMap">
		SELECT P.PLAN_IDX, P.PLAN_HD_CODE, P.FIN_PRD_CD_CODE, F.FIN_PRD_CD_NAME, P.PLAN_SDATE, P.PLAN_EDATE,
		        P.PLAN_PROD_VOL, NVL(I.INST_PROD_INDICA_VOL,0) AS INST_PROD_INDICA_VOL,
		        P.PLAN_PRE_VOL, O.SLS_ORD_DTL_VOL, O.SLS_ORD_DTL_DLV_DATE, O.SLS_ORD_HD_NO, NVL(P.PLAN_REMK,' ') AS PLAN_REMK
		FROM BF_PROD_PLAN P
            JOIN BF_PROD_PLAN_HD PH
              ON PH.PLAN_HD_CODE = P.PLAN_HD_CODE
            JOIN BF_CMN_FINISH_PRODUCT_CODE F
		      ON F.FIN_PRD_CD_CODE = P.FIN_PRD_CD_CODE
            LEFT OUTER JOIN (SELECT OH.SLS_ORD_HD_NO, OD.FIN_PRD_CD_CODE, OD.SLS_ORD_DTL_VOL, OD.SLS_ORD_DTL_DLV_DATE
	                         FROM BF_SALES_ORD_HD OH
	                            JOIN BF_SALES_ORD_DTL OD
	                             ON OH.SLS_ORD_HD_NO = OD.SLS_ORD_HD_NO) O
              ON O.SLS_ORD_HD_NO = PH.SLS_ORD_HD_NO
                 AND O.FIN_PRD_CD_CODE = P.FIN_PRD_CD_CODE
		    LEFT OUTER JOIN (SELECT I.FIN_PRD_CD_CODE, IH.PLAN_HD_CODE, SUM(I.INST_PROD_INDICA_VOL) AS INST_PROD_INDICA_VOL
		                        FROM BF_PROD_INSTRUCTION IH
		                           JOIN BF_PROD_INST_DETAIL I
		                            ON IH.INST_NO = I.INST_NO
		                     WHERE IH.PLAN_HD_CODE IS NOT NULL
		                     GROUP BY IH.PLAN_HD_CODE, I.FIN_PRD_CD_CODE) I
		      ON P.PLAN_HD_CODE = I.PLAN_HD_CODE
		           AND P.FIN_PRD_CD_CODE = I.FIN_PRD_CD_CODE
		WHERE I.INST_PROD_INDICA_VOL IS NULL
				AND P.PLAN_HD_CODE = #{planHdCode}
	</select>
	
	<!-- insert -->
	<insert id="planHdInsert" parameterType="planHdVO">
		INSERT INTO BF_PROD_PLAN_HD
		VALUES('PLAN'||LPAD(BF_PROD_PLAN_HD_SEQ.NEXTVAL,3,0),#{planHdName},#{slsOrdHdNo},
				#{empId},#{planHdDate},#{planHdRemk})
	</insert>
	
	<insert id="planInsert" parameterType="planVO" >
		<selectKey keyProperty="maxPlanHdCode" resultType="String" order="BEFORE">
			SELECT MAX(PLAN_HD_CODE) FROM BF_PROD_PLAN_HD
		</selectKey>
		
		INSERT INTO BF_PROD_PLAN
		VALUES(BF_PROD_PLAN_SEQ.NEXTVAL,
		<choose>
			<when test="planHdCode != null and planHdCode != ''">
				#{planHdCode},
			</when>
			<otherwise>
				#{maxPlanHdCode},
			</otherwise>
		</choose>
		#{finPrdCdCode},#{planProdVol},#{planSdate},#{planEdate},#{planRemk},#{planPreVol})
	</insert>
	
	<delete id="planHdDelete">
		DELETE BF_PROD_PLAN_HD
		WHERE PLAN_HD_CODE = #{planHdCode}
	</delete>
	
	<delete id="planDtlDelete">
		DELETE BF_PROD_PLAN
		WHERE PLAN_IDX IN
		<foreach item="priKey" index="idx" collection="list" open="(" separator="," close=")">
		#{priKey}
		</foreach>
	</delete>
	
	<update id="planHdUpdate">
		UPDATE BF_PROD_PLAN_HD
		SET ${updCol} = #{updCont}
		WHERE PLAN_HD_CODE = #{priKey}
	</update>
	
	<update id="planDtlUpdate">
		UPDATE BF_PROD_PLAN
		SET ${updCol} = #{updCont}
		WHERE PLAN_IDX = #{priKey}
	</update>
</mapper>