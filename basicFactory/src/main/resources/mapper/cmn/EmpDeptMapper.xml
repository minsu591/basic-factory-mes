<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mes.bf.cmn.mapper.EmpDeptMapper">
	
	<resultMap type="com.mes.bf.cmn.vo.EmpVO" id="empMap">
		<id property="empId" column="emp_id"/>
		<result property="empId" column="emp_id"/>
		<result property="empPw" column="emp_pw"/>
		<result property="empName" column="emp_name"/>
		<result property="empEmail" column="emp_email"/>
		<result property="empPhone" column="emp_phone"/>
		<result property="empAuth" column="emp_auth"/>
		<result property="empPos" column="emp_pos"/>
		<result property="empRemk" column="emp_remk"/>
	</resultMap>
	
	<resultMap type="com.mes.bf.cmn.vo.DeptVO" id="deptMap">
		<id property="deptNo" column="dept_no"/>
		<result property="deptNo" column="dept_no"/>
		<result property="deptName" column="dept_name"/>
	</resultMap>
	
	<resultMap type="empDept" id="empDeptMap">
		<collection property="empVO" resultMap="empMap"/>
		<collection property="deptVO" resultMap="deptMap"/>
	</resultMap>
	
	<select id="listEmpDept" resultMap="empDeptMap">
		SELECT D.DEPT_NO, D.DEPT_NAME, E.EMP_ID, E.EMP_PW,
			   E.EMP_NAME, E.EMP_EMAIL, E.EMP_PHONE, E.EMP_AUTH,
			   E.EMP_POS, NVL(E.EMP_REMK,' ') AS EMP_REMK
		FROM BF_CMN_EMP E
        INNER JOIN BF_CMN_DEPT D
		ON E.DEPT_NO = D.DEPT_NO
		WHERE 1=1
		<if test="empId != null and empId != ''">
		AND E.EMP_ID LIKE '%'||#{empId}||'%'
		</if>
		<if test="empName != null and empName != ''">
		AND E.EMP_NAME LIKE '%'||#{empName}||'%'
		</if>
		<if test="deptNo != null and deptNo != ''">
		AND D.DEPT_NO = #{deptNo}
		</if>
	</select>
	
	<select id="listDept" resultType="dept">
		SELECT DEPT_NO, DEPT_NAME
        FROM BF_CMN_DEPT
        <if test="deptName != null and deptName != ''">
        WHERE DEPT_NAME LIKE '%'||#{deptName}||'%'
        </if>
        ORDER BY DEPT_NO
	</select>
	
	<select id="findEmp" resultType="emp">
		SELECT D.DEPT_NO, D.DEPT_NAME, E.EMP_ID, E.EMP_PW,
			   E.EMP_NAME, E.EMP_EMAIL, E.EMP_PHONE, E.EMP_AUTH,
			   E.EMP_POS, NVL(E.EMP_REMK,' ') AS EMP_REMK
		FROM BF_CMN_EMP E
        INNER JOIN BF_CMN_DEPT D
		ON E.DEPT_NO = D.DEPT_NO
		WHERE E.EMP_ID = #{empId}
	</select>
	
	<!-- dept insert,delete,update -->
	<insert id="deptInsert" parameterType="String">
		INSERT INTO BF_CMN_DEPT
		VALUES(BF_CMN_DEPT_SEQ.NEXTVAL, #{deptName})
	</insert>
	
	<delete id="deptDelete">
		DELETE BF_CMN_DEPT
		WHERE DEPT_NO IN
		<foreach item="priKey" index="idx" collection="list" open="(" separator="," close=")">
		#{priKey}
		</foreach>
	</delete>
	
	<update id="deptUpdate" parameterType = "String">
		UPDATE BF_CMN_DEPT
		SET ${updCol} = #{updCont}
		WHERE DEPT_NO = #{priKey}
	</update>
	
	<!-- emp insert,delete,update -->
	<insert id="empInsert" parameterType="emp">
		<selectKey keyProperty="deptNo" resultType="int" order="BEFORE">
			SELECT DEPT_NO
			FROM BF_CMN_DEPT
			WHERE DEPT_NAME = #{deptName}
		</selectKey>
		INSERT INTO BF_CMN_EMP
		VALUES(#{empId}, #{deptNo},#{empPw},#{empName},#{empEmail},#{empPhone},#{empAuth},#{empPos},#{empRemk})
	</insert>
	
	<delete id="empDelete" parameterType="list">
		DELETE BF_CMN_EMP
		WHERE EMP_ID IN
		<foreach item="priKey" index="idx" collection="list" open="(" separator="," close=")">
		#{priKey}
		</foreach>
	</delete>
	
	<update id="empUpdate" parameterType = "String">
		UPDATE BF_CMN_EMP
		SET ${updCol} = #{updCont}
		WHERE EMP_ID = #{priKey}
	</update>
	
</mapper>